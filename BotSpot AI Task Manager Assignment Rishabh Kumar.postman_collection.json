{
	"info": {
		"_postman_id": "60b2318a-1775-4959-9c48-f278bbfa5c00",
		"name": "BotSpot AI Task Manager Assignment API Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17796142",
		"_collection_link": "https://www.postman.com/crimson-sunset-183548/workspace/botspot-ai-task-manager/collection/17796142-60b2318a-1775-4959-9c48-f278bbfa5c00?action=share&source=collection_link&creator=17796142"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "LogIn",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Login successful\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    // Parse the response body",
									"    const responseJson = pm.response.json();",
									"    ",
									"    // Check if token exists in response",
									"    if (responseJson.data && responseJson.data.token) {",
									"        // Set the token in environment variable",
									"        pm.environment.set('token', responseJson.data.token);",
									"        console.log(\"Token saved to environment\");",
									"    } else {",
									"        console.error(\"Token not found in response\");",
									"    }",
									"});",
									"",
									"pm.test(\"Response has required fields\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('status');",
									"    pm.expect(responseJson.data).to.have.property('token');",
									"    pm.expect(responseJson.data).to.have.property('user');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"rishabh1@example.com\",\n  \"password\": \"password123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "SignUp",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Login successful\", function () {",
									"    pm.response.to.have.status(201);",
									"    ",
									"    // Parse the response body",
									"    const responseJson = pm.response.json();",
									"    ",
									"    // Check if token exists in response",
									"    if (responseJson.data && responseJson.data.token) {",
									"        // Set the token in environment variable",
									"        pm.environment.set('token', responseJson.data.token);",
									"        console.log(\"Token saved to environment\");",
									"    } else {",
									"        console.error(\"Token not found in response\");",
									"    }",
									"});",
									"",
									"pm.test(\"Response has required fields\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('status');",
									"    pm.expect(responseJson.data).to.have.property('token');",
									"    pm.expect(responseJson.data).to.have.property('user');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"rishabh\",\n  \"email\": \"rishabh1@example.com\",\n  \"password\": \"password123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Task",
			"item": [
				{
					"name": "Create Task",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:authorization-secret}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Complete Project1 by rishabh\",\n  \"description\": \"Finish the task management API by rishabh\",\n  \"status\": \"Pending\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Tasks",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:authorization-secret}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/tasks?page=1&limit=10&search=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tasks"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "search",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task By ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:authorization-secret}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/tasks/678a5be65a6f501d772d2fb6",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tasks",
								"678a5be65a6f501d772d2fb6"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Task",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:authorization-secret}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/tasks/678a4eb5334a12269f33a244",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tasks",
								"678a4eb5334a12269f33a244"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Task",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{vault:authorization-secret}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Updated Task Title\",\n  \"status\": \"In Progress\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/tasks/678a4d147a959df29d7a388a",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tasks",
								"678a4d147a959df29d7a388a"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"if (!pm.environment.get('token')) {",
							"    console.log('No token found. Please login first.');",
							"}"
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}